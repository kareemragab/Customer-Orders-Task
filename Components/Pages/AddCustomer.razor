@page "/customers/add"
@using CustomerOrders.Models
@using DevExpress.Xpo
@inject NavigationManager Navigation

<PageTitle>Add Customer</PageTitle>

<h1>Add New Customer</h1>

<div class="row">
    <div class="col-md-6">
        <EditForm Model="@customer" OnValidSubmit="HandleValidSubmit">
            <div class="mb-3">
                <label for="customerId" class="form-label">Customer ID</label>
                <InputText id="customerId" class="form-control" @bind-Value="customer.CustomerId" />
            </div>

            <div class="mb-3">
                <label for="name" class="form-label">Name *</label>
                <InputText id="name" class="form-control" @bind-Value="customer.Name" required />
            </div>

            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <InputText id="email" class="form-control" @bind-Value="customer.Email" type="email" />
            </div>

            <div class="mb-3">
                <label for="phone" class="form-label">Phone Number</label>
                <InputText id="phone" class="form-control" @bind-Value="customer.PhoneNumber" />
            </div>

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }

            <div class="mb-3">
                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private CustomerModel customer = new CustomerModel();
    private string errorMessage = string.Empty;

    private void HandleValidSubmit()
    {
        try
        {
            using (var uow = new UnitOfWork())
            {
                var newCustomer = new Customer(uow)
                {
                    CustomerId = customer.CustomerId,
                    Name = customer.Name,
                    Email = customer.Email,
                    PhoneNumber = customer.PhoneNumber
                };

                uow.CommitChanges();
            }
            Navigation.NavigateTo("/customers");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/customers");
    }

    private class CustomerModel
    {
        public string? CustomerId { get; set; }
        public string? Name { get; set; }
        public string? Email { get; set; }
        public string? PhoneNumber { get; set; }
    }
}
